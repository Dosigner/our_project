/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from 'react'
import { useGLTF, PerspectiveCamera, useAnimations } from '@react-three/drei'

export function Samsung(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('model/samsung.glb')
  const { actions, names } = useAnimations(animations, group);
  const {isPlay, setIsPlay} = useState(false);
  useEffect(()=>{
    console.log(actions.animation_0, names);
    //actions.animation_0.setLoop(2201,2);
    actions.animation_0.play();
    actions.animation_0.halt(5.5);
  })
  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group name="Magazine_-_Thin_(Copy)">
          <group name="Staples" position={[-10.27, 0, 2.67]} rotation={[0, 1.57, 0]}>
            <mesh name="Staple_02" geometry={nodes.Staple_02.geometry} material={materials.Staples} position={[-9.83, 0, 0]} />
            <mesh name="Staple_01" geometry={nodes.Staple_01.geometry} material={materials.Staples} position={[9.83, 0, 0]} />
          </group>
          <mesh name="Content" geometry={nodes.Content.geometry} material={materials.book} position={[0, 0, -12.19]} rotation={[0, 1.57, 0]} />
          <mesh name="Cover" geometry={nodes.Cover.geometry} material={materials.Plain} morphTargetDictionary={nodes.Cover.morphTargetDictionary} morphTargetInfluences={nodes.Cover.morphTargetInfluences} position={[0, 0, -12.19]} rotation={[0, 1.57, 0]} />
        </group>
        <PerspectiveCamera name="Camera" makeDefault={false} far={10000000000} near={0.01} fov={45} position={[-8.35, 71.2, 1.82]} rotation={[-1.56, 0, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('model/samsung.glb')
